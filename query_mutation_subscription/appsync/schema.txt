type AppSyncToDo {
	title: String!
	content: String
}

type AppSyncToDoConnection {
	items: [AppSyncToDo]
	nextToken: String
}

input CreateAppSyncToDoInput {
	title: String!
	content: String
}

input DeleteAppSyncToDoInput {
	title: String!
}

type Mutation {
	createAppSyncToDo(input: CreateAppSyncToDoInput!): AppSyncToDo
	updateAppSyncToDo(input: UpdateAppSyncToDoInput!): AppSyncToDo
	deleteAppSyncToDo(input: DeleteAppSyncToDoInput!): AppSyncToDo
}

type Query {
	getAppSyncToDo(title: String!): AppSyncToDo
	listAppSyncToDos(filter: TableAppSyncToDoFilterInput, limit: Int, nextToken: String): AppSyncToDoConnection
}

type Subscription {
	onCreateAppSyncToDo(title: String, content: String): AppSyncToDo
		@aws_subscribe(mutations: ["createAppSyncToDo"])
	onUpdateAppSyncToDo(title: String, content: String): AppSyncToDo
		@aws_subscribe(mutations: ["updateAppSyncToDo"])
	onDeleteAppSyncToDo(title: String, content: String): AppSyncToDo
		@aws_subscribe(mutations: ["deleteAppSyncToDo"])
}

input TableAppSyncToDoFilterInput {
	title: TableStringFilterInput
	content: TableStringFilterInput
}

input TableBooleanFilterInput {
	ne: Boolean
	eq: Boolean
}

input TableFloatFilterInput {
	ne: Float
	eq: Float
	le: Float
	lt: Float
	ge: Float
	gt: Float
	contains: Float
	notContains: Float
	between: [Float]
}

input TableIDFilterInput {
	ne: ID
	eq: ID
	le: ID
	lt: ID
	ge: ID
	gt: ID
	contains: ID
	notContains: ID
	between: [ID]
	beginsWith: ID
}

input TableIntFilterInput {
	ne: Int
	eq: Int
	le: Int
	lt: Int
	ge: Int
	gt: Int
	contains: Int
	notContains: Int
	between: [Int]
}

input TableStringFilterInput {
	ne: String
	eq: String
	le: String
	lt: String
	ge: String
	gt: String
	contains: String
	notContains: String
	between: [String]
	beginsWith: String
}

input UpdateAppSyncToDoInput {
	title: String!
	content: String
}